apiVersion: v1
kind: ConfigMap
metadata:
  name: fraud-config
  namespace: fraud-detection
  labels:
    app: fraud-detection
data:
  # Application Configuration
  log-level: "INFO"
  environment: "production"
  workers: "4"

  # Kafka Configuration
  kafka-bootstrap-servers: "kafka-service:9092"
  kafka-topic-transactions: "transactions"
  kafka-topic-predictions: "fraud-predictions"
  kafka-consumer-group: "fraud-detection-group"

  # Model Configuration
  model-path: "/app/models"
  model-reload-interval: "3600"
  feature-store-cache-ttl: "300"

  # API Configuration
  api-rate-limit: "1000"
  api-timeout: "30"
  max-batch-size: "1000"

  # Monitoring Configuration
  metrics-enabled: "true"
  metrics-port: "8000"
  health-check-interval: "30"

  # Database Configuration
  db-pool-size: "20"
  db-max-overflow: "30"
  db-pool-timeout: "30"

  # Redis Configuration
  redis-max-connections: "100"
  redis-timeout: "5"

  # Feature Pipeline Configuration
  feature-pipeline-batch-size: "1000"
  feature-pipeline-timeout: "10"

  # ML Model Configuration
  model-prediction-threshold: "0.5"
  model-confidence-threshold: "0.8"
  ensemble-voting: "soft"
---
apiVersion: v1
kind: Secret
metadata:
  name: fraud-secrets
  namespace: fraud-detection
  labels:
    app: fraud-detection
type: Opaque
stringData:
  # Database Credentials
  database-url: "postgresql://fraud_user:CHANGE_ME@postgres-service:5432/fraud_detection"
  database-password: "CHANGE_ME"

  # Redis Credentials
  redis-url: "redis://redis-service:6379/0"
  redis-password: ""

  # API Keys and Tokens
  # IMPORTANT: Replace these with actual secure values before deploying to production
  # Generate secure keys using: python -c "import secrets; print(secrets.token_urlsafe(32))"
  api-secret-key: "<REPLACE_WITH_SECURE_SECRET_KEY>"
  jwt-secret: "<REPLACE_WITH_SECURE_JWT_SECRET>"

  # External Service API Keys
  # IMPORTANT: Replace with actual API keys from your service providers
  external-data-api-key: "<REPLACE_WITH_ACTUAL_API_KEY>"
  notification-service-key: "<REPLACE_WITH_ACTUAL_SERVICE_KEY>"

  # Monitoring Credentials
  # IMPORTANT: Set strong passwords for monitoring services
  prometheus-password: "<REPLACE_WITH_SECURE_PASSWORD>"
  grafana-admin-password: "<REPLACE_WITH_SECURE_PASSWORD>"

  # Kafka SASL Credentials (if using SASL)
  kafka-username: ""
  kafka-password: ""
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: fraud-detection
  labels:
    app: postgres
data:
  postgresql.conf: |
    # PostgreSQL Configuration for Fraud Detection
    listen_addresses = '*'
    port = 5432
    max_connections = 200
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB

    # Logging
    log_destination = 'stderr'
    logging_collector = on
    log_directory = 'log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_statement = 'mod'
    log_min_duration_statement = 1000

    # Replication (if needed)
    wal_level = replica
    max_wal_senders = 3
    max_replication_slots = 3

  pg_hba.conf: |
    # PostgreSQL Client Authentication Configuration
    local   all             all                                     trust
    host    all             all             127.0.0.1/32            scram-sha-256
    host    all             all             ::1/128                 scram-sha-256
    host    all             all             0.0.0.0/0               scram-sha-256
    host    replication     all             0.0.0.0/0               scram-sha-256
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: fraud-detection
  labels:
    app: redis
data:
  redis.conf: |
    # Redis Configuration for Fraud Detection
    bind 0.0.0.0
    port 6379
    timeout 0
    tcp-keepalive 300

    # Memory Management
    maxmemory 512mb
    maxmemory-policy allkeys-lru

    # Persistence
    save 900 1
    save 300 10
    save 60 10000

    # Logging
    loglevel notice
    logfile ""

    # Security
    protected-mode yes

    # Performance
    tcp-backlog 511
    databases 16

    # Append Only File
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: fraud-detection
  labels:
    app: kafka
data:
  server.properties: |
    # Kafka Configuration for Fraud Detection
    broker.id=1
    listeners=PLAINTEXT://0.0.0.0:9092
    advertised.listeners=PLAINTEXT://kafka-service:9092

    # Zookeeper
    zookeeper.connect=zookeeper-service:2181

    # Log Configuration
    log.dirs=/var/lib/kafka/data
    num.partitions=3
    default.replication.factor=1
    min.insync.replicas=1

    # Log Retention
    log.retention.hours=168
    log.segment.bytes=1073741824
    log.retention.check.interval.ms=300000

    # Performance
    socket.send.buffer.bytes=102400
    socket.receive.buffer.bytes=102400
    socket.request.max.bytes=104857600

    # Topic Management
    auto.create.topics.enable=false
    delete.topic.enable=true

    # Producer Configuration
    compression.type=snappy

    # Consumer Configuration
    group.initial.rebalance.delay.ms=3000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: fraud-detection
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      - job_name: 'fraud-api'
        static_configs:
          - targets: ['fraud-api-service:80']
        metrics_path: '/metrics'
        scrape_interval: 10s
      
      - job_name: 'postgres'
        static_configs:
          - targets: ['postgres-exporter:9187']
      
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-exporter:9121']
      
      - job_name: 'kafka'
        static_configs:
          - targets: ['kafka-exporter:9308']
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - fraud-detection
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
