[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fraud-detection-system"
version = "1.0.0"
description = "Production-ready real-time credit card fraud detection system"
authors = [{name = "Aaron Murillo", email = "murillo.aaron102@gmail.com"}]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Web Framework
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "gunicorn==21.2.0",
    
    # Data Validation & Serialization
    "pydantic==2.5.0",
    "pydantic-settings==2.1.0",
    
    # Machine Learning
    "scikit-learn==1.3.2",
    "xgboost==2.0.2",
    "lightgbm==4.1.0",
    "shap==0.42.1",
    "joblib==1.3.2",
    "numpy==1.24.4",
    "pandas==2.1.4",
    
    # Streaming & Messaging
    "kafka-python==2.0.2",
    "confluent-kafka==2.3.0",
    "avro-python3==1.11.3",
    
    # Database & Caching
    "asyncpg==0.29.0",
    "sqlalchemy[asyncio]==2.0.23",
    "alembic==1.13.1",
    "redis==5.0.1",
    "hiredis==2.2.3",
    
    # Feature Store (Optional)
    "feast==0.34.1",
    
    # Monitoring & Observability
    "prometheus-client==0.19.0",
    "opentelemetry-api==1.21.0",
    "opentelemetry-sdk==1.21.0",
    "opentelemetry-instrumentation-fastapi==0.42b0",
    "opentelemetry-exporter-jaeger==1.21.0",
    "structlog==23.2.0",
    
    # Security & Authentication
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "python-multipart==0.0.6",
    
    # HTTP & Networking
    "httpx==0.25.2",
    "aiohttp==3.9.1",
    
    # Configuration & Environment
    "python-dotenv==1.0.0",
    "click==8.1.7",
    "typer==0.9.0",
    
    # Data Processing
    "pyarrow==14.0.1",
    "polars==0.20.2",
    
    # Utilities
    "rich==13.7.0",
    "tqdm==4.66.1",
    "python-dateutil==2.8.2",
    "pytz==2023.3",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "httpx==0.25.2",  # For testing FastAPI
    
    # Code Quality
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "pre-commit==3.6.0",
    
    # Documentation
    "mkdocs==1.5.3",
    "mkdocs-material==9.4.8",
    "mkdocstrings[python]==0.24.0",
]

production = [
    # Production WSGI/ASGI servers
    "gunicorn==21.2.0",
    "uvicorn[standard]==0.24.0",
    
    # Production monitoring
    "sentry-sdk[fastapi]==1.38.0",
    "newrelic==9.2.0",
]

training = [
    # Additional ML libraries for training
    "optuna==3.4.0",
    "mlflow==2.8.1",
    "wandb==0.16.1",
    "hyperopt==0.2.7",
    "catboost==1.2.2",
]

[project.urls]
Homepage = "https://github.com/AaronMurillo01/ml-fraud-detection-system"
Repository = "https://github.com/AaronMurillo01/ml-fraud-detection-system.git"
Documentation = "https://github.com/AaronMurillo01/ml-fraud-detection-system/tree/main/docs"
"Bug Tracker" = "https://github.com/AaronMurillo01/ml-fraud-detection-system/issues"

[project.scripts]
fraud-api = "service.api.main:main"
fraud-train = "training.pipelines.train:main"
fraud-stream = "streaming.processors.main:main"

[tool.setuptools.packages.find]
where = ["."]  # list of folders that contain the packages (["src"] by default)
include = ["service*", "streaming*", "features*", "training*"]  # package names should match these glob patterns (["*"] by default)
exclude = ["tests*"]  # exclude packages matching these glob patterns (empty by default)

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["service", "streaming", "features", "training"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]